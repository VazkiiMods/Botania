buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.25'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

version = "${minecraft_version}-${build_number}-FORGE"
if (System.getenv().RELEASE_MODE != "1") {
    version += '-SNAPSHOT'
}

mixin {
    add sourceSets.main, "botania.refmap.json"

    config "botania_xplat.mixins.json"
    config "botania_forge.mixins.json"
}

repositories {
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "C4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/" // for emi
    }
    maven {
        name = "Unascribed"
        url "https://repo.unascribed.com" // for ears
        content {
            includeGroup "com.unascribed"
        }
    }
}

minecraft {
    mappings channel: 'official', version: minecraft_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory file('../run')
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            ideaModule "${rootProject.name}.${project.name}.main"
            mods {
                botania {
                    source sourceSets.main
                    source project(":Xplat").sourceSets.main
                }
            }
        }

        server {
            workingDirectory file('../run')
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            ideaModule "${rootProject.name}.${project.name}.main"
            mods {
                botania {
                    source sourceSets.main
                    source project(":Xplat").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('../run')
            property 'fml.earlyprogresswindow', 'false'
            ideaModule "${rootProject.name}.${project.name}.main"
            args "-mixin.config=botania_xplat.mixins.json", "-mixin.config=botania_forge.mixins.json"
            mods {
                botania {
                    source sourceSets.main
                    source project(":Xplat").sourceSets.main
                }
            }
            args '--mod', 'botania', '--all', '--output', '"' + file('src/generated/resources/') + '"'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-47.1.3"
    compileOnly project(":Xplat")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-84-FORGE")
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:15.2.0.27")
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.2.0.27")

    compileOnly fg.deobf("dev.emi:emi-forge:1.0.12+${minecraft_version}:api")
    //runtimeOnly fg.deobf("dev.emi:emi-forge:1.1.4+${minecraft_version}")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.4.2+1.20.1")

    // compileOnly fg.deobf('com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:9.1.123')

    compileOnly fg.deobf('com.unascribed:ears-api:1.4.5')
}

compileJava {
    source(project(":Xplat").sourceSets.main.allSource)
    options.compilerArgs << "-Xlint:all,-classfile,-processing,-deprecation,-serial" << "-Werror"
}

sourcesJar {
    from project(":Xplat").sourceSets.main.allJava
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

processResources {
    from project(":Xplat").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("mods.toml") {
        expand "version": project.version
    }

    // Exclude datagenerator .cache directory
    exclude '.cache'
}
jar {
    manifest {
        attributes([
                "Specification-Title": "${mod_name}",
                "Specification-Vendor": "vazkii",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "${mod_name}",
                "Implementation-Version": "${archiveVersion.get()}",
                "Implementation-Vendor" :"vazkii"
        ])
    }
    finalizedBy 'reobfJar'
}

task apiJar(type: Jar, dependsOn: classes) {
    // Sources included because of MinecraftForge/ForgeGradle#369
    from project(":Xplat").sourceSets.main.allJava
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)

    include 'vazkii/botania/api/**'

    archiveClassifier = 'api'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
            artifact sourcesJar
            artifact apiJar
            pom.withXml {
                def node = asNode()
                if(node.dependencies.size() > 0)
                    node.remove(node.dependencies) // Remove deps, as they are all mappings-dependent and/or forge
            }
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
